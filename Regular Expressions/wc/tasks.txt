
âœ… WC PRACTICE LAB IS READY âœ…

ðŸŸ¢ Basic
1. Count the number of lines in notes.txt
2. Count words in story.txt
3. Count bytes in data.csv
4. Count lines + words in report.md
5. Verify wc report.md output (lines, words, bytes)

ðŸŸ¡ Intermediate
6. Use cat with wc to count words in notes.txt
7. Count total lines in all .txt files
8. Count number of files + directories in wc_lab
9. Count total words in story.txt without extra spaces (hint: xargs)
10. Check longest line in essay.txt

ðŸ”´ Advanced
11. Count lines containing "ERROR" in log.txt
12. Count total characters (multibyte aware) in src/*.c
13. Count all files in current + subdirectories
14. Count empty lines in script.sh
15. Compare wc -c vs wc -m on essay.txt
16. Count unique words in book.txt (use tr + sort + uniq + wc)
17. Save line count of notes.txt into a variable and print "File has X lines"
18. Find average line length of essay.txt
19. Find the file with the longest line among all .txt files
20. Count non-empty, non-comment lines in src/*.c

âš« Expert (extra tough)
21. Find top 5 longest lines in essay.txt (with wc -L + sort).
22. Count how many numbers in numbers.txt are divisible by 7, then pipe to wc.
23. Measure total words across all .c and .txt files combined.
24. Find how many files in wc_lab contain more than 10 lines (use wc -l + awk).
25. Compute the sum of all line counts of .txt files (combine wc -l + awk).
26. Print only filenames of .txt files whose longest line is more than 50 chars (wc -L).
27. Find which file has the maximum number of words in wc_lab (wc -w + sort).
28. Count total number of characters in the first 100 lines of numbers.txt.
29. Compare byte size vs character count of book.txt (wc -c vs wc -m).
30. Write a one-liner to display: "wc_lab has X files, Y directories, Z total lines".

